/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Toadzgotchi, ToadzgotchiInterface } from "../Toadzgotchi";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "calcDecayFeed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "calcDecayPlay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "calcDecaySleep",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "feedValue",
        type: "uint256",
      },
    ],
    name: "feedToad",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "giveXP",
        type: "uint256",
      },
    ],
    name: "grantXP",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isFeedable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isPlayable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isSleepable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "playValue",
        type: "uint256",
      },
    ],
    name: "playToad",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "readToadHunger",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "readToadPlay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "readToadSleep",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "readToadStats",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isVibing",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "startVibingTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "isFedValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastFeedBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "isHappyValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastPlayBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "isRestedValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastSleepBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "toadXP",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "toadLevel",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isDead",
            type: "bool",
          },
        ],
        internalType: "struct Toadzgotchi.ToadStats",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "returnMsgSender",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sleepValue",
        type: "uint256",
      },
    ],
    name: "sleepToad",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startVibing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "toadStats",
    outputs: [
      {
        internalType: "bool",
        name: "isVibing",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "startVibingTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "isFedValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastFeedBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "isHappyValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastPlayBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "isRestedValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastSleepBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "toadXP",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "toadLevel",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isDead",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506129ec806100206000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063874387df116100a2578063ab8bb6d311610071578063ab8bb6d31461027c578063c6bc55841461029a578063d4377229146102b6578063d60bf8c2146102d2578063e4d1013a146102f05761010b565b8063874387df1461020857806389b39bf6146102245780638acb47b414610240578063a37f68e41461025e5761010b565b80632deb87b1116100de5780632deb87b1146101885780633d724a3f146101a657806378c90660146101c45780637955b8f9146101ce5761010b565b80630321be0e146101105780630aa4098f1461012e5780631916fb5e1461014c5780631a0653071461016a575b600080fd5b61011861030e565b6040516101259190612390565b60405180910390f35b610136610440565b6040516101439190612622565b60405180910390f35b610154610527565b604051610161919061263e565b60405180910390f35b6101726106bd565b60405161017f919061263e565b60405180910390f35b610190610706565b60405161019d9190612390565b60405180910390f35b6101ae6108be565b6040516101bb9190612375565b60405180910390f35b6101cc6108c6565b005b6101e860048036038101906101e39190612083565b610c4f565b6040516101ff9b9a999897969594939291906123ab565b60405180910390f35b610222600480360381019061021d91906120ac565b610cc3565b005b61023e600480360381019061023991906120ac565b610fe2565b005b610248611301565b604051610255919061263e565b60405180910390f35b61026661134a565b604051610273919061263e565b60405180910390f35b6102846114e0565b604051610291919061263e565b60405180910390f35b6102b460048036038101906102af91906120ac565b611676565b005b6102d060048036038101906102cb91906120ac565b6118d8565b005b6102da611bf7565b6040516102e79190612390565b60405180910390f35b6102f8611daf565b604051610305919061263e565b60405180910390f35b60008015156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a0160009054906101000a900460ff161515146103a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039b90612582565b60405180910390fd5b60646000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015414156104395760006103f8610527565b11610438576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042f90612502565b60405180910390fd5b5b6001905090565b610448611ffb565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101600160405290816000820160009054906101000a900460ff16151515158152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a820160009054906101000a900460ff161515151581525050905090565b6000806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301544361057791906126cb565b90506001811161058b5760009150506106ba565b6002811015801561059d575060048111155b156105ac57600a9150506106ba565b600581101580156105be575060078111155b156105cd5760149150506106ba565b600881101580156105df5750600a8111155b156105ee57601e9150506106ba565b600b81101580156106005750600d8111155b1561060f5760289150506106ba565b600e8110158015610621575060108111155b156106305760329150506106ba565b60118110158015610642575060138111155b1561065157603c9150506106ba565b60148110158015610663575060168111155b156106725760469150506106ba565b60178110158015610684575060198111155b156106935760509150506106ba565b601a81101580156106a55750601c8111155b156106b457605a9150506106ba565b606e9150505b90565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060154905090565b6000601e6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060154101561078d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078490612522565b60405180910390fd5b600015156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a0160009054906101000a900460ff16151514610822576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081990612582565b60405180910390fd5b60646000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004015414156108b75760006108766114e0565b116108b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ad90612602565b60405180910390fd5b5b6001905090565b600033905090565b600015156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1615151461095b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095290612562565b60405180910390fd5b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff021916908315150217905550436000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206009018190555060326000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020181905550436000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018190555060326000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040181905550436000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005018190555060326000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060181905550436000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060070181905550610c4d6040518060600160405280602a815260200161295a602a9139336000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154611df8565b565b60006020528060005260406000206000915090508060000160009054906101000a900460ff169080600101549080600201549080600301549080600401549080600501549080600601549080600701549080600801549080600901549080600a0160009054906101000a900460ff1690508b565b610ccb610706565b610d0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d01906125a2565b60405180910390fd5b6000610d146114e0565b90506000816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040154610d6591906126cb565b9050610dd6604051806060016040528060338152602001612984603391396000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005015443610dd091906126cb565b84611e97565b610e156040518060400160405280601981526020017f416464696e67202725732720746f20697346656456616c75650000000000000081525084611f36565b6000811015610e2357600090505b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040181905550826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040154610eb69190612675565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004018190555060646000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401541115610f8d5760646000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401819055505b436000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050181905550610fdd6028611676565b505050565b610fea61030e565b611029576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102090612542565b60405180910390fd5b6000611033610527565b90506000816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015461108491906126cb565b90506110f5604051806060016040528060338152602001612984603391396000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154436110ef91906126cb565b84611e97565b6111346040518060400160405280601981526020017f416464696e67202725732720746f20697346656456616c75650000000000000081525084611f36565b600081101561114257600090505b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020181905550826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201546111d59190612675565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555060646000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015411156112ac5760646000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055505b436000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506112fc600f611676565b505050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154905090565b6000806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600701544361139a91906126cb565b9050600181116113ae5760009150506114dd565b600281101580156113c0575060048111155b156113cf57600a9150506114dd565b600581101580156113e1575060078111155b156113f05760149150506114dd565b600881101580156114025750600a8111155b1561141157601e9150506114dd565b600b81101580156114235750600d8111155b156114325760289150506114dd565b600e8110158015611444575060108111155b156114535760329150506114dd565b60118110158015611465575060138111155b1561147457603c9150506114dd565b60148110158015611486575060168111155b156114955760469150506114dd565b601781101580156114a7575060198111155b156114b65760509150506114dd565b601a81101580156114c85750601c8111155b156114d757605a9150506114dd565b606e9150505b90565b6000806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501544361153091906126cb565b905060018111611544576000915050611673565b60028110158015611556575060048111155b1561156557600a915050611673565b60058110158015611577575060078111155b15611586576014915050611673565b600881101580156115985750600a8111155b156115a757601e915050611673565b600b81101580156115b95750600d8111155b156115c8576028915050611673565b600e81101580156115da575060108111155b156115e9576032915050611673565b601181101580156115fb575060138111155b1561160a57603c915050611673565b6014811015801561161c575060168111155b1561162b576046915050611673565b6017811015801561163d575060198111155b1561164c576050915050611673565b601a811015801561165e5750601c8111155b1561166d57605a915050611673565b606e9150505b90565b6000816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600801546116c59190612675565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206008018190555060646000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060080154106118d45760646000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206008015411156117ee5760646000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600801546117eb91906126cb565b90505b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206009015461183c9190612675565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206009018190555080600061188e9190612675565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600801819055505b5050565b6118e0611bf7565b61191f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611916906125c2565b60405180910390fd5b600061192961134a565b90506000816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206006015461197a91906126cb565b90506119eb604051806060016040528060338152602001612984603391396000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060070154436119e591906126cb565b84611e97565b611a2a6040518060400160405280601981526020017f416464696e67202725732720746f20697346656456616c75650000000000000081525084611f36565b6000811015611a3857600090505b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060181905550826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060154611acb9190612675565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206006018190555060646000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601541115611ba25760646000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601819055505b436000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060070181905550611bf26019611676565b505050565b600060146000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201541015611c7e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c75906125e2565b60405180910390fd5b600015156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a0160009054906101000a900460ff16151514611d13576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d0a90612582565b60405180910390fd5b60646000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601541415611da8576000611d6761134a565b11611da7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d9e90612502565b60405180910390fd5b5b6001905090565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040154905090565b611e92838383604051602401611e1093929190612456565b6040516020818303038152906040527f07c81217000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611fd2565b505050565b611f31838383604051602401611eaf939291906124c4565b6040516020818303038152906040527f969cdd03000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611fd2565b505050565b611fce8282604051602401611f4c929190612494565b6040516020818303038152906040527f9710a9d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611fd2565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6040518061016001604052806000151581526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b6000813590506120688161292b565b92915050565b60008135905061207d81612942565b92915050565b60006020828403121561209557600080fd5b60006120a384828501612059565b91505092915050565b6000602082840312156120be57600080fd5b60006120cc8482850161206e565b91505092915050565b6120de816126ff565b82525050565b6120ed81612711565b82525050565b6120fc81612711565b82525050565b600061210d82612659565b6121178185612664565b9350612127818560208601612747565b612130816127a9565b840191505092915050565b6000612148601983612664565b9150612153826127ba565b602082019050919050565b600061216b601d83612664565b9150612176826127e3565b602082019050919050565b600061218e601483612664565b91506121998261280c565b602082019050919050565b60006121b1601683612664565b91506121bc82612835565b602082019050919050565b60006121d4600c83612664565b91506121df8261285e565b602082019050919050565b60006121f7601483612664565b915061220282612887565b602082019050919050565b600061221a601583612664565b9150612225826128b0565b602082019050919050565b600061223d602083612664565b9150612248826128d9565b602082019050919050565b6000612260601e83612664565b915061226b82612902565b602082019050919050565b6101608201600082015161228d60008501826120e4565b5060208201516122a06020850182612357565b5060408201516122b36040850182612357565b5060608201516122c66060850182612357565b5060808201516122d96080850182612357565b5060a08201516122ec60a0850182612357565b5060c08201516122ff60c0850182612357565b5060e082015161231260e0850182612357565b50610100820151612327610100850182612357565b5061012082015161233c610120850182612357565b506101408201516123516101408501826120e4565b50505050565b6123608161273d565b82525050565b61236f8161273d565b82525050565b600060208201905061238a60008301846120d5565b92915050565b60006020820190506123a560008301846120f3565b92915050565b6000610160820190506123c1600083018e6120f3565b6123ce602083018d612366565b6123db604083018c612366565b6123e8606083018b612366565b6123f5608083018a612366565b61240260a0830189612366565b61240f60c0830188612366565b61241c60e0830187612366565b61242a610100830186612366565b612438610120830185612366565b6124466101408301846120f3565b9c9b505050505050505050505050565b600060608201905081810360008301526124708186612102565b905061247f60208301856120d5565b61248c6040830184612366565b949350505050565b600060408201905081810360008301526124ae8185612102565b90506124bd6020830184612366565b9392505050565b600060608201905081810360008301526124de8186612102565b90506124ed6020830185612366565b6124fa6040830184612366565b949350505050565b6000602082019050818103600083015261251b8161213b565b9050919050565b6000602082019050818103600083015261253b8161215e565b9050919050565b6000602082019050818103600083015261255b81612181565b9050919050565b6000602082019050818103600083015261257b816121a4565b9050919050565b6000602082019050818103600083015261259b816121c7565b9050919050565b600060208201905081810360008301526125bb816121ea565b9050919050565b600060208201905081810360008301526125db8161220d565b9050919050565b600060208201905081810360008301526125fb81612230565b9050919050565b6000602082019050818103600083015261261b81612253565b9050919050565b6000610160820190506126386000830184612276565b92915050565b60006020820190506126536000830184612366565b92915050565b600081519050919050565b600082825260208201905092915050565b60006126808261273d565b915061268b8361273d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156126c0576126bf61277a565b5b828201905092915050565b60006126d68261273d565b91506126e18361273d565b9250828210156126f4576126f361277a565b5b828203905092915050565b600061270a8261271d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b8381101561276557808201518184015260208101905061274a565b83811115612774576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b7f546f61642069732066756c6c2c2063616e6e6f74206665656400000000000000600082015250565b7f546f61642063616e6e6f7420706c6179207768696c6520736c65657079000000600082015250565b7f546f6164206973206e6f74206665656461626c65000000000000000000000000600082015250565b7f546f616420697320616c726561647920766962696e6700000000000000000000600082015250565b7f546f616420697320646561640000000000000000000000000000000000000000600082015250565b7f546f6164206973206e6f7420706c617961626c65000000000000000000000000600082015250565b7f546f6164206973206e6f7420736c65657061626c650000000000000000000000600082015250565b7f546f61642063616e6e6f7420736c656570207768696c65207374617276696e67600082015250565b7f546f61642066756c6c7920706c617965642c2063616e6e6f7420706c61790000600082015250565b612934816126ff565b811461293f57600080fd5b50565b61294b8161273d565b811461295657600080fd5b5056fe272573272068617320737461727465642067616d6520617420626c6f636b206e756d626572202725732754696d652073696e6365206c61737420666565643a202725732720626c6f636b732e206465636179696e672062792027257327a26469706673582212207d4fcb79fd53bad8cac5da1151dcde72bd90b4a49cc56d4fbdd1360c9c0d641f64736f6c63430008040033";

export class Toadzgotchi__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Toadzgotchi> {
    return super.deploy(overrides || {}) as Promise<Toadzgotchi>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Toadzgotchi {
    return super.attach(address) as Toadzgotchi;
  }
  connect(signer: Signer): Toadzgotchi__factory {
    return super.connect(signer) as Toadzgotchi__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ToadzgotchiInterface {
    return new utils.Interface(_abi) as ToadzgotchiInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Toadzgotchi {
    return new Contract(address, _abi, signerOrProvider) as Toadzgotchi;
  }
}
