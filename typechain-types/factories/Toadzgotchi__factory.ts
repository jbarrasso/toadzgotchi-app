/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Toadzgotchi, ToadzgotchiInterface } from "../Toadzgotchi";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "feedValue",
        type: "uint256",
      },
    ],
    name: "feedToad",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "playValue",
        type: "uint256",
      },
    ],
    name: "playToad",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "readToadHunger",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "readToadPlay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "readToadSleep",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "readToadStats",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isVibing",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "isFedValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "isHappyValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "isRestedValue",
            type: "uint256",
          },
        ],
        internalType: "struct Toadzgotchi.ToadStats",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "returnMsgSender",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sleepValue",
        type: "uint256",
      },
    ],
    name: "sleepToad",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "toadStats",
    outputs: [
      {
        internalType: "bool",
        name: "isVibing",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "isFedValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "isHappyValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "isRestedValue",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610e0a806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806389b39bf61161006657806389b39bf61461014c5780638acb47b414610168578063d437722914610186578063d65ab5f2146101a2578063e4d1013a146101ac5761009e565b80630aa4098f146100a35780631a065307146100c15780633d724a3f146100df5780637955b8f9146100fd578063874387df14610130575b600080fd5b6100ab6101ca565b6040516100b89190610c43565b60405180910390f35b6100c9610259565b6040516100d69190610c5e565b60405180910390f35b6100e76102a2565b6040516100f49190610b75565b60405180910390f35b61011760048036038101906101129190610a4a565b6102aa565b6040516101279493929190610b90565b60405180910390f35b61014a60048036038101906101459190610a73565b6102e7565b005b61016660048036038101906101619190610a73565b61044c565b005b6101706105b1565b60405161017d9190610c5e565b60405180910390f35b6101a0600480360381019061019b9190610a73565b6105fa565b005b6101aa61075f565b005b6101b4610849565b6040516101c19190610c5e565b60405180910390f35b6101d26109f6565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820160009054906101000a900460ff161515151581526020016001820154815260200160028201548152602001600382015481525050905090565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154905090565b600033905090565b60006020528060005260406000206000915090508060000160009054906101000a900460ff16908060010154908060020154908060030154905084565b6103266040518060400160405280601b81526020017f416464696e67202725732720746f206973486170707956616c7565000000000081525082610892565b60646000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154106103b75760008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055505b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201546104049190610c95565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555050565b61048b6040518060400160405280601981526020017f416464696e67202725732720746f20697346656456616c75650000000000000081525082610892565b60646000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101541061051c5760008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055505b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546105699190610c95565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905090565b6106396040518060400160405280601c81526020017f416464696e67202725732720746f20697352657374656456616c75650000000081525082610892565b60646000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154106106ca5760008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055505b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301546107179190610c95565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018190555050565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff0219169083151502179055506108476040518060400160405280601b81526020017f272573272068617320737461727465642067616d652e20272573270000000000815250336000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff1661092e565b565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154905090565b61092a82826040516024016108a8929190610c13565b6040516020818303038152906040527f9710a9d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506109cd565b5050565b6109c883838360405160240161094693929190610bd5565b6040516020818303038152906040527fc91d5ed4000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506109cd565b505050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b60405180608001604052806000151581526020016000815260200160008152602001600081525090565b600081359050610a2f81610da6565b92915050565b600081359050610a4481610dbd565b92915050565b600060208284031215610a5c57600080fd5b6000610a6a84828501610a20565b91505092915050565b600060208284031215610a8557600080fd5b6000610a9384828501610a35565b91505092915050565b610aa581610ceb565b82525050565b610ab481610cfd565b82525050565b610ac381610cfd565b82525050565b6000610ad482610c79565b610ade8185610c84565b9350610aee818560208601610d33565b610af781610d95565b840191505092915050565b608082016000820151610b186000850182610aab565b506020820151610b2b6020850182610b57565b506040820151610b3e6040850182610b57565b506060820151610b516060850182610b57565b50505050565b610b6081610d29565b82525050565b610b6f81610d29565b82525050565b6000602082019050610b8a6000830184610a9c565b92915050565b6000608082019050610ba56000830187610aba565b610bb26020830186610b66565b610bbf6040830185610b66565b610bcc6060830184610b66565b95945050505050565b60006060820190508181036000830152610bef8186610ac9565b9050610bfe6020830185610a9c565b610c0b6040830184610aba565b949350505050565b60006040820190508181036000830152610c2d8185610ac9565b9050610c3c6020830184610b66565b9392505050565b6000608082019050610c586000830184610b02565b92915050565b6000602082019050610c736000830184610b66565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610ca082610d29565b9150610cab83610d29565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ce057610cdf610d66565b5b828201905092915050565b6000610cf682610d09565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610d51578082015181840152602081019050610d36565b83811115610d60576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b610daf81610ceb565b8114610dba57600080fd5b50565b610dc681610d29565b8114610dd157600080fd5b5056fea2646970667358221220740b3073378d3f3686204a7ac8b7b39204ae765f1d11cbe73f38382612d6b2fd64736f6c63430008040033";

export class Toadzgotchi__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Toadzgotchi> {
    return super.deploy(overrides || {}) as Promise<Toadzgotchi>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Toadzgotchi {
    return super.attach(address) as Toadzgotchi;
  }
  connect(signer: Signer): Toadzgotchi__factory {
    return super.connect(signer) as Toadzgotchi__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ToadzgotchiInterface {
    return new utils.Interface(_abi) as ToadzgotchiInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Toadzgotchi {
    return new Contract(address, _abi, signerOrProvider) as Toadzgotchi;
  }
}
