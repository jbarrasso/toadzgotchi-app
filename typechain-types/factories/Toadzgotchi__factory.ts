/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Toadzgotchi, ToadzgotchiInterface } from "../Toadzgotchi";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "_toadzgotchiNFTContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchToadStats",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isVibing",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "startVibingTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "isFedValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastFeedBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "isHappyValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastPlayBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "isRestedValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastSleepBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "toadXP",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "toadLevel",
            type: "uint256",
          },
        ],
        internalType: "struct Toadzgotchi.ToadStats[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ownsToadzgotchis",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "returnMsgSender",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "toadStats",
    outputs: [
      {
        internalType: "bool",
        name: "isVibing",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "startVibingTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "isFedValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastFeedBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "isHappyValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastPlayBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "isRestedValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastSleepBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "toadXP",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "toadLevel",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "toadz",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "toadzgotchiIdsOwned",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260018054735f5cc7bc9bfe1e6319bde9e30d883ece36d00cad6001600160a01b0319918216811790925560028054909116909117905534801561004657600080fd5b5061083c806100566000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806369c14e3c1161005b57806369c14e3c146100d05780639dd03a5714610182578063c78df11e14610197578063fcc4afe8146101ac57600080fd5b806320b17f9314610082578063347061f1146100b25780633d724a3f146100ca575b600080fd5b600154610095906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100ba6101cd565b60405190151581526020016100a9565b33610095565b6101366100de3660046106c8565b6003602081905260009182526040909120805460018201546002830154938301546004840154600585015460068601546007870154600888015460099098015460ff909716989597959694959394929391929091908a565b604080519a15158b5260208b0199909952978901969096526060880194909452608087019290925260a086015260c085015260e0840152610100830152610120820152610140016100a9565b61018a610264565b6040516100a99190610785565b61019f610348565b6040516100a991906106e0565b6101bf6101ba3660046106c8565b6105e7565b6040519081526020016100a9565b6002546040516326eaff9b60e01b815233600482015260009182916001600160a01b03909116906326eaff9b9060240160006040518083038186803b15801561021557600080fd5b505afa158015610229573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102519190810190610608565b51111561025e5750600190565b50600090565b606061026e6101cd565b15156001146102c45760405162461bcd60e51b815260206004820152601f60248201527f53656e64657220646f65736e2774206f776e20546f61647a676f74636869730060448201526064015b60405180910390fd5b6002546040516326eaff9b60e01b81523360048201526001600160a01b03909116906326eaff9b9060240160006040518083038186803b15801561030757600080fd5b505afa15801561031b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103439190810190610608565b905090565b60606103526101cd565b15156001146103a35760405162461bcd60e51b815260206004820152601f60248201527f53656e64657220646f65736e2774206f776e20546f61647a676f74636869730060448201526064016102bb565b6002546040516326eaff9b60e01b81523360048201526000916001600160a01b0316906326eaff9b9060240160006040518083038186803b1580156103e757600080fd5b505afa1580156103fb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104239190810190610608565b90506000815167ffffffffffffffff81111561044f57634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156104d857816020015b6104c56040518061014001604052806000151581526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b81526020019060019003908161046d5790505b50905060005b82518110156105e0576003600084838151811061050b57634e487b7160e01b600052603260045260246000fd5b60200260200101518152602001908152602001600020604051806101400160405290816000820160009054906101000a900460ff1615151515815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820154815260200160078201548152602001600882015481526020016009820154815250508282815181106105c257634e487b7160e01b600052603260045260246000fd5b602002602001018190525080806105d8906107c9565b9150506104de565b5092915050565b600081815481106105f757600080fd5b600091825260209091200154905081565b6000602080838503121561061a578182fd5b825167ffffffffffffffff80821115610631578384fd5b818501915085601f830112610644578384fd5b815181811115610656576106566107f0565b8060051b604051601f19603f8301168101818110858211171561067b5761067b6107f0565b604052828152858101935084860182860187018a1015610699578788fd5b8795505b838610156106bb57805185526001959095019493860193860161069d565b5098975050505050505050565b6000602082840312156106d9578081fd5b5035919050565b602080825282518282018190526000919060409081850190868401855b8281101561077857815180511515855280870151858801528581015186860152606080820151908601526080808201519086015260a0808201519086015260c0808201519086015260e080820151908601526101008082015190860152610120908101519085015261014090930192908501906001016106fd565b5091979650505050505050565b6020808252825182820181905260009190848201906040850190845b818110156107bd578351835292840192918401916001016107a1565b50909695505050505050565b60006000198214156107e957634e487b7160e01b81526011600452602481fd5b5060010190565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220bb18b33ef1ccadce9f2da2527f40cb0d21d33e6a88649d8a2b5c7de199579ce664736f6c63430008040033";

export class Toadzgotchi__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Toadzgotchi> {
    return super.deploy(overrides || {}) as Promise<Toadzgotchi>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Toadzgotchi {
    return super.attach(address) as Toadzgotchi;
  }
  connect(signer: Signer): Toadzgotchi__factory {
    return super.connect(signer) as Toadzgotchi__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ToadzgotchiInterface {
    return new utils.Interface(_abi) as ToadzgotchiInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Toadzgotchi {
    return new Contract(address, _abi, signerOrProvider) as Toadzgotchi;
  }
}
