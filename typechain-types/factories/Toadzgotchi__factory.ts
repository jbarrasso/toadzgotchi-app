/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Toadzgotchi, ToadzgotchiInterface } from "../Toadzgotchi";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "_toadzgotchiPetsContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "fetchAToad",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isVibing",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "startVibingTime",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "isFedValue",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "lastFeedBlock",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "isHappyValue",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "lastPlayBlock",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "isRestedValue",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "lastSleepBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "toadXP",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "toadLevel",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isDead",
            type: "bool",
          },
        ],
        internalType: "struct Toadzgotchi.ToadStats",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "giveXP",
        type: "uint256",
      },
    ],
    name: "grantXP",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ownsToadzgotchis",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "readToadHunger",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "readToadPlay",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "readToadSleep",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "returnMsgSender",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "toadStats",
    outputs: [
      {
        internalType: "bool",
        name: "isVibing",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "startVibingTime",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "isFedValue",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "lastFeedBlock",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "isHappyValue",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "lastPlayBlock",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "isRestedValue",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "lastSleepBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "toadXP",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "toadLevel",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isDead",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "toadz",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526001805473cc4c41415fc68b2fbf70102742a83cde435e0ca76001600160a01b0319918216811790925560028054909116909117905534801561004657600080fd5b50610a7f806100566000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638acb47b4116100665780638acb47b4146101cb578063c6bc5584146101d3578063e184a0be146101e8578063e4d1013a14610208578063fcc4afe81461021057600080fd5b80631a065307146100a35780632ebd4531146100be578063347061f1146100e95780633d724a3f1461010157806369c14e3c14610107575b600080fd5b6100ab610223565b6040519081526020015b60405180910390f35b6001546100d1906001600160a01b031681565b6040516001600160a01b0390911681526020016100b5565b6100f161026c565b60405190151581526020016100b5565b336100d1565b610174610115366004610931565b600360208190526000918252604090912080546001820154600283015493830154600484015460058501546006860154600787015460088801546009890154600a9099015460ff9889169a97999798969795969495939492939192168b565b604080519b15158c5260208c019a909a52988a01979097526060890195909552608088019390935260a087019190915260c086015260e08501526101008401526101208301521515610140820152610160016100b5565b6100ab610303565b6101e66101e1366004610931565b61034c565b005b6101fb6101f6366004610931565b6105ff565b6040516100b59190610949565b6100ab610807565b6100ab61021e366004610931565b610850565b6000600360008060008154811061024a57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060060154905090565b6002546040516326eaff9b60e01b815233600482015260009182916001600160a01b03909116906326eaff9b9060240160006040518083038186803b1580156102b457600080fd5b505afa1580156102c8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102f09190810190610871565b5111156102fd5750600190565b50600090565b6000600360008060008154811061032a57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060020154905090565b600080600360008060008154811061037457634e487b7160e01b600052603260045260246000fd5b90600052602060002001548152602001908152602001600020600901548361039c91906109e6565b90508060036000806000815481106103c457634e487b7160e01b600052603260045260246000fd5b90600052602060002001548152602001908152602001600020600801546103eb91906109ce565b600360008060008154811061041057634e487b7160e01b600052603260045260246000fd5b90600052602060002001548152602001908152602001600020600801819055506064600360008060008154811061045757634e487b7160e01b600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060080154106105fa57606460036000806000815481106104a057634e487b7160e01b600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060080154111561051457606460036000806000815481106104ea57634e487b7160e01b600052603260045260246000fd5b90600052602060002001548152602001908152602001600020600801546105119190610a06565b91505b600360008060008154811061053957634e487b7160e01b600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060090154600161056291906109ce565b600360008060008154811061058757634e487b7160e01b600052603260045260246000fd5b90600052602060002001548152602001908152602001600020600901819055508160006105b491906109ce565b60036000806000815481106105d957634e487b7160e01b600052603260045260246000fd5b90600052602060002001548152602001908152602001600020600801819055505b505050565b6106606040518061016001604052806000151581526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b61066861026c565b15156001146106bd5760405162461bcd60e51b815260206004820152601f60248201527f53656e64657220646f65736e2774206f776e20546f61647a676f746368697300604482015260640160405180910390fd5b6002546040516326eaff9b60e01b81523360048201526003916000916001600160a01b03909116906326eaff9b9060240160006040518083038186803b15801561070657600080fd5b505afa15801561071a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107429190810190610871565b848151811061076157634e487b7160e01b600052603260045260246000fd5b6020908102919091018101518252818101929092526040908101600020815161016081018352815460ff908116151582526001830154948201949094526002820154928101929092526003810154606083015260048101546080830152600581015460a0830152600681015460c0830152600781015460e083015260088101546101008301526009810154610120830152600a0154909116151561014082015292915050565b6000600360008060008154811061082e57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060040154905090565b6000818154811061086057600080fd5b600091825260209091200154905081565b60006020808385031215610883578182fd5b825167ffffffffffffffff8082111561089a578384fd5b818501915085601f8301126108ad578384fd5b8151818111156108bf576108bf610a33565b8060051b604051601f19603f830116810181811085821117156108e4576108e4610a33565b604052828152858101935084860182860187018a1015610902578788fd5b8795505b83861015610924578051855260019590950194938601938601610906565b5098975050505050505050565b600060208284031215610942578081fd5b5035919050565b81511515815261016081016020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015260c083015160c083015260e083015160e0830152610100808401518184015250610120808401518184015250610140808401516109c68285018215159052565b505092915050565b600082198211156109e1576109e1610a1d565b500190565b600082610a0157634e487b7160e01b81526012600452602481fd5b500490565b600082821015610a1857610a18610a1d565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122060dc3094234d4f23a81672d77baddaa1a30c9cbeb6b2c4797d6e96bd6711148664736f6c63430008040033";

export class Toadzgotchi__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Toadzgotchi> {
    return super.deploy(overrides || {}) as Promise<Toadzgotchi>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Toadzgotchi {
    return super.attach(address) as Toadzgotchi;
  }
  connect(signer: Signer): Toadzgotchi__factory {
    return super.connect(signer) as Toadzgotchi__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ToadzgotchiInterface {
    return new utils.Interface(_abi) as ToadzgotchiInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Toadzgotchi {
    return new Contract(address, _abi, signerOrProvider) as Toadzgotchi;
  }
}
