/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Toadzgotchi, ToadzgotchiInterface } from "../Toadzgotchi";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "_toadzgotchiPetsContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchToadStats",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isVibing",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "startVibingTime",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "isFedValue",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "lastFeedBlock",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "isHappyValue",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "lastPlayBlock",
            type: "uint256",
          },
          {
            internalType: "int256",
            name: "isRestedValue",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "lastSleepBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "toadXP",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "toadLevel",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isDead",
            type: "bool",
          },
        ],
        internalType: "struct Toadzgotchi.ToadStats[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "giveXP",
        type: "uint256",
      },
    ],
    name: "grantXP",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ownsToadzgotchis",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "readToadHunger",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "readToadPlay",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "readToadSleep",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "returnMsgSender",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "toadStats",
    outputs: [
      {
        internalType: "bool",
        name: "isVibing",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "startVibingTime",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "isFedValue",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "lastFeedBlock",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "isHappyValue",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "lastPlayBlock",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "isRestedValue",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "lastSleepBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "toadXP",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "toadLevel",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isDead",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "toadz",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526001805473cc4c41415fc68b2fbf70102742a83cde435e0ca76001600160a01b0319918216811790925560028054909116909117905534801561004657600080fd5b50610b6b806100566000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638acb47b4116100665780638acb47b4146101cb578063c6bc5584146101d3578063c78df11e146101e8578063e4d1013a146101fd578063fcc4afe81461020557600080fd5b80631a065307146100a35780632ebd4531146100be578063347061f1146100e95780633d724a3f1461010157806369c14e3c14610107575b600080fd5b6100ab610218565b6040519081526020015b60405180910390f35b6001546100d1906001600160a01b031681565b6040516001600160a01b0390911681526020016100b5565b6100f1610261565b60405190151581526020016100b5565b336100d1565b6101746101153660046109d5565b600360208190526000918252604090912080546001820154600283015493830154600484015460058501546006860154600787015460088801546009890154600a9099015460ff9889169a97999798969795969495939492939192168b565b604080519b15158c5260208c019a909a52988a01979097526060890195909552608088019390935260a087019190915260c086015260e08501526101008401526101208301521515610140820152610160016100b5565b6100ab6102f8565b6101e66101e13660046109d5565b610341565b005b6101f06105f4565b6040516100b591906109ed565b6100ab6108ab565b6100ab6102133660046109d5565b6108f4565b6000600360008060008154811061023f57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060060154905090565b6002546040516326eaff9b60e01b815233600482015260009182916001600160a01b03909116906326eaff9b9060240160006040518083038186803b1580156102a957600080fd5b505afa1580156102bd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526102e59190810190610915565b5111156102f25750600190565b50600090565b6000600360008060008154811061031f57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060020154905090565b600080600360008060008154811061036957634e487b7160e01b600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060090154836103919190610ab7565b90508060036000806000815481106103b957634e487b7160e01b600052603260045260246000fd5b90600052602060002001548152602001908152602001600020600801546103e09190610a9f565b600360008060008154811061040557634e487b7160e01b600052603260045260246000fd5b90600052602060002001548152602001908152602001600020600801819055506064600360008060008154811061044c57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060080154106105ef576064600360008060008154811061049557634e487b7160e01b600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060080154111561050957606460036000806000815481106104df57634e487b7160e01b600052603260045260246000fd5b90600052602060002001548152602001908152602001600020600801546105069190610ad7565b91505b600360008060008154811061052e57634e487b7160e01b600052603260045260246000fd5b906000526020600020015481526020019081526020016000206009015460016105579190610a9f565b600360008060008154811061057c57634e487b7160e01b600052603260045260246000fd5b90600052602060002001548152602001908152602001600020600901819055508160006105a99190610a9f565b60036000806000815481106105ce57634e487b7160e01b600052603260045260246000fd5b90600052602060002001548152602001908152602001600020600801819055505b505050565b60606105fe610261565b15156001146106535760405162461bcd60e51b815260206004820152601f60248201527f53656e64657220646f65736e2774206f776e20546f61647a676f746368697300604482015260640160405180910390fd5b6002546040516326eaff9b60e01b81523360048201526000916001600160a01b0316906326eaff9b9060240160006040518083038186803b15801561069757600080fd5b505afa1580156106ab573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106d39190810190610915565b90506000815167ffffffffffffffff8111156106ff57634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561079157816020015b61077e6040518061016001604052806000151581526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b81526020019060019003908161071d5790505b50905060005b82518110156108a457600360008483815181106107c457634e487b7160e01b600052603260045260246000fd5b6020908102919091018101518252818101929092526040908101600020815161016081018352815460ff908116151582526001830154948201949094526002820154928101929092526003810154606083015260048101546080830152600581015460a0830152600681015460c0830152600781015460e083015260088101546101008301526009810154610120830152600a01549091161515610140820152825183908390811061088657634e487b7160e01b600052603260045260246000fd5b6020026020010181905250808061089c90610aee565b915050610797565b5092915050565b600060036000806000815481106108d257634e487b7160e01b600052603260045260246000fd5b9060005260206000200154815260200190815260200160002060040154905090565b6000818154811061090457600080fd5b600091825260209091200154905081565b60006020808385031215610927578182fd5b825167ffffffffffffffff8082111561093e578384fd5b818501915085601f830112610951578384fd5b81518181111561096357610963610b1f565b8060051b604051601f19603f8301168101818110858211171561098857610988610b1f565b604052828152858101935084860182860187018a10156109a6578788fd5b8795505b838610156109c85780518552600195909501949386019386016109aa565b5098975050505050505050565b6000602082840312156109e6578081fd5b5035919050565b602080825282518282018190526000919060409081850190868401855b82811015610a9257815180511515855286810151878601528581015186860152606080820151908601526080808201519086015260a0808201519086015260c0808201519086015260e0808201519086015261010080820151908601526101208082015190860152610140908101511515908501526101609093019290850190600101610a0a565b5091979650505050505050565b60008219821115610ab257610ab2610b09565b500190565b600082610ad257634e487b7160e01b81526012600452602481fd5b500490565b600082821015610ae957610ae9610b09565b500390565b6000600019821415610b0257610b02610b09565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220a16756e159617d9548ed1d6a6f980dd9fb0ae020eaa17a900c40445a7aaa7d2964736f6c63430008040033";

export class Toadzgotchi__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Toadzgotchi> {
    return super.deploy(overrides || {}) as Promise<Toadzgotchi>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Toadzgotchi {
    return super.attach(address) as Toadzgotchi;
  }
  connect(signer: Signer): Toadzgotchi__factory {
    return super.connect(signer) as Toadzgotchi__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ToadzgotchiInterface {
    return new utils.Interface(_abi) as ToadzgotchiInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Toadzgotchi {
    return new Contract(address, _abi, signerOrProvider) as Toadzgotchi;
  }
}
