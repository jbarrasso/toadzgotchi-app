/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Toadzgotchi, ToadzgotchiInterface } from "../Toadzgotchi";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "calcDecayFeed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "calcDecayPlay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "calcDecaySleep",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "feedValue",
        type: "uint256",
      },
    ],
    name: "feedToad",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "isFeedable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isPlayable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isSleepable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "playValue",
        type: "uint256",
      },
    ],
    name: "playToad",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "readToadHunger",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "readToadPlay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "readToadSleep",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "readToadStats",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isVibing",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "startVibingTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "isFedValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastFeedBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "isHappyValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastPlayBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "isRestedValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastSleepBlock",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "toadXP",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "toadLevel",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isDead",
            type: "bool",
          },
        ],
        internalType: "struct Toadzgotchi.ToadStats",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "returnMsgSender",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sleepValue",
        type: "uint256",
      },
    ],
    name: "sleepToad",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startVibing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "toadStats",
    outputs: [
      {
        internalType: "bool",
        name: "isVibing",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "startVibingTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "isFedValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastFeedBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "isHappyValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastPlayBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "isRestedValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastSleepBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "toadXP",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "toadLevel",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isDead",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506126cc806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063874387df11610097578063ab8bb6d311610066578063ab8bb6d314610271578063d43772291461028f578063d60bf8c2146102ab578063e4d1013a146102c957610100565b8063874387df146101fd57806389b39bf6146102195780638acb47b414610235578063a37f68e41461025357610100565b80632deb87b1116100d35780632deb87b11461017d5780633d724a3f1461019b57806378c90660146101b95780637955b8f9146101c357610100565b80630321be0e146101055780630aa4098f146101235780631916fb5e146101415780631a0653071461015f575b600080fd5b61010d6102e7565b60405161011a9190612070565b60405180910390f35b61012b610409565b6040516101389190612302565b60405180910390f35b6101496104f0565b604051610156919061231e565b60405180910390f35b610167610686565b604051610174919061231e565b60405180910390f35b6101856106cf565b6040516101929190612070565b60405180910390f35b6101a3610876565b6040516101b09190612055565b60405180910390f35b6101c161087e565b005b6101dd60048036038101906101d89190611d63565b610bc0565b6040516101f49b9a9998979695949392919061208b565b60405180910390f35b61021760048036038101906102129190611d8c565b610c34565b005b610233600480360381019061022e9190611d8c565b610f49565b005b61023d61125e565b60405161024a919061231e565b60405180910390f35b61025b6112a7565b604051610268919061231e565b60405180910390f35b61027961143d565b604051610286919061231e565b60405180910390f35b6102a960048036038101906102a49190611d8c565b6115d3565b005b6102b36118e8565b6040516102c09190612070565b60405180910390f35b6102d1611a8f565b6040516102de919061231e565b60405180910390f35b600060646000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201541061036d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610364906122a2565b60405180910390fd5b600015156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a0160009054906101000a900460ff16151514610402576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f990612242565b60405180910390fd5b6001905090565b610411611cdb565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101600160405290816000820160009054906101000a900460ff16151515158152602001600182015481526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a820160009054906101000a900460ff161515151581525050905090565b6000806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301544361054091906123ab565b905060018111610554576000915050610683565b60028110158015610566575060048111155b1561057557600a915050610683565b60058110158015610587575060078111155b15610596576014915050610683565b600881101580156105a85750600a8111155b156105b757601e915050610683565b600b81101580156105c95750600d8111155b156105d8576028915050610683565b600e81101580156105ea575060108111155b156105f9576032915050610683565b6011811015801561060b575060138111155b1561061a57603c915050610683565b6014811015801561062c575060168111155b1561063b576046915050610683565b6017811015801561064d575060198111155b1561065c576050915050610683565b601a811015801561066e5750601c8111155b1561067d57605a915050610683565b606e9150505b90565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060154905090565b6000601e6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601541015610756576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074d906121e2565b60405180910390fd5b60646000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040154106107da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d1906122a2565b60405180910390fd5b600015156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a0160009054906101000a900460ff1615151461086f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086690612242565b60405180910390fd5b6001905090565b600033905090565b600015156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16151514610913576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090a90612222565b60405180910390fd5b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff021916908315150217905550436000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555060326000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020181905550436000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018190555060326000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040181905550436000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005018190555060326000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060181905550436000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060070181905550610bbe6040518060600160405280602a815260200161263a602a9139336000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154611ad8565b565b60006020528060005260406000206000915090508060000160009054906101000a900460ff169080600101549080600201549080600301549080600401549080600501549080600601549080600701549080600801549080600901549080600a0160009054906101000a900460ff1690508b565b610c3c6106cf565b610c7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7290612262565b60405180910390fd5b6000610c8561143d565b90506000816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040154610cd691906123ab565b9050610d47604051806060016040528060338152602001612664603391396000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005015443610d4191906123ab565b84611b77565b610d866040518060400160405280601981526020017f416464696e67202725732720746f20697346656456616c75650000000000000081525084611c16565b6000811015610d9457600090505b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040181905550826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040154610e279190612355565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004018190555060646000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401541115610efe5760646000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401819055505b436000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060050181905550505050565b610f516102e7565b610f90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8790612202565b60405180910390fd5b6000610f9a6104f0565b90506000816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154610feb91906123ab565b905061105c604051806060016040528060338152602001612664603391396000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301544361105691906123ab565b84611b77565b61109b6040518060400160405280601981526020017f416464696e67202725732720746f20697346656456616c75650000000000000081525084611c16565b60008110156110a957600090505b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020181905550826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015461113c9190612355565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555060646000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015411156112135760646000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055505b436000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030181905550505050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154905090565b6000806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060070154436112f791906123ab565b90506001811161130b57600091505061143a565b6002811015801561131d575060048111155b1561132c57600a91505061143a565b6005811015801561133e575060078111155b1561134d57601491505061143a565b6008811015801561135f5750600a8111155b1561136e57601e91505061143a565b600b81101580156113805750600d8111155b1561138f57602891505061143a565b600e81101580156113a1575060108111155b156113b057603291505061143a565b601181101580156113c2575060138111155b156113d157603c91505061143a565b601481101580156113e3575060168111155b156113f257604691505061143a565b60178110158015611404575060198111155b1561141357605091505061143a565b601a81101580156114255750601c8111155b1561143457605a91505061143a565b606e9150505b90565b6000806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501544361148d91906123ab565b9050600181116114a15760009150506115d0565b600281101580156114b3575060048111155b156114c257600a9150506115d0565b600581101580156114d4575060078111155b156114e35760149150506115d0565b600881101580156114f55750600a8111155b1561150457601e9150506115d0565b600b81101580156115165750600d8111155b156115255760289150506115d0565b600e8110158015611537575060108111155b156115465760329150506115d0565b60118110158015611558575060138111155b1561156757603c9150506115d0565b60148110158015611579575060168111155b156115885760469150506115d0565b6017811015801561159a575060198111155b156115a95760509150506115d0565b601a81101580156115bb5750601c8111155b156115ca57605a9150506115d0565b606e9150505b90565b6115db6118e8565b61161a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611611906122c2565b60405180910390fd5b60006116246112a7565b90506000816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206006015461167591906123ab565b90506116e6604051806060016040528060338152602001612664603391396000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060070154436116e091906123ab565b84611b77565b6117256040518060400160405280601981526020017f416464696e67202725732720746f20697346656456616c75650000000000000081525084611c16565b600081101561173357600090505b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060181905550826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601546117c69190612355565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206006018190555060646000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060154111561189d5760646000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601819055505b436000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060070181905550505050565b600060146000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154101561196f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611966906122e2565b60405180910390fd5b60646000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060060154106119f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119ea90612282565b60405180910390fd5b600015156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a0160009054906101000a900460ff16151514611a88576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a7f90612242565b60405180910390fd5b6001905090565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040154905090565b611b72838383604051602401611af093929190612136565b6040516020818303038152906040527f07c81217000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611cb2565b505050565b611c11838383604051602401611b8f939291906121a4565b6040516020818303038152906040527f969cdd03000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611cb2565b505050565b611cae8282604051602401611c2c929190612174565b6040516020818303038152906040527f9710a9d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611cb2565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6040518061016001604052806000151581526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b600081359050611d488161260b565b92915050565b600081359050611d5d81612622565b92915050565b600060208284031215611d7557600080fd5b6000611d8384828501611d39565b91505092915050565b600060208284031215611d9e57600080fd5b6000611dac84828501611d4e565b91505092915050565b611dbe816123df565b82525050565b611dcd816123f1565b82525050565b611ddc816123f1565b82525050565b6000611ded82612339565b611df78185612344565b9350611e07818560208601612427565b611e1081612489565b840191505092915050565b6000611e28601d83612344565b9150611e338261249a565b602082019050919050565b6000611e4b601483612344565b9150611e56826124c3565b602082019050919050565b6000611e6e601683612344565b9150611e79826124ec565b602082019050919050565b6000611e91600c83612344565b9150611e9c82612515565b602082019050919050565b6000611eb4601483612344565b9150611ebf8261253e565b602082019050919050565b6000611ed7601483612344565b9150611ee282612567565b602082019050919050565b6000611efa600b83612344565b9150611f0582612590565b602082019050919050565b6000611f1d601583612344565b9150611f28826125b9565b602082019050919050565b6000611f40602083612344565b9150611f4b826125e2565b602082019050919050565b61016082016000820151611f6d6000850182611dc4565b506020820151611f806020850182612037565b506040820151611f936040850182612037565b506060820151611fa66060850182612037565b506080820151611fb96080850182612037565b5060a0820151611fcc60a0850182612037565b5060c0820151611fdf60c0850182612037565b5060e0820151611ff260e0850182612037565b50610100820151612007610100850182612037565b5061012082015161201c610120850182612037565b50610140820151612031610140850182611dc4565b50505050565b6120408161241d565b82525050565b61204f8161241d565b82525050565b600060208201905061206a6000830184611db5565b92915050565b60006020820190506120856000830184611dd3565b92915050565b6000610160820190506120a1600083018e611dd3565b6120ae602083018d612046565b6120bb604083018c612046565b6120c8606083018b612046565b6120d5608083018a612046565b6120e260a0830189612046565b6120ef60c0830188612046565b6120fc60e0830187612046565b61210a610100830186612046565b612118610120830185612046565b612126610140830184611dd3565b9c9b505050505050505050505050565b600060608201905081810360008301526121508186611de2565b905061215f6020830185611db5565b61216c6040830184612046565b949350505050565b6000604082019050818103600083015261218e8185611de2565b905061219d6020830184612046565b9392505050565b600060608201905081810360008301526121be8186611de2565b90506121cd6020830185612046565b6121da6040830184612046565b949350505050565b600060208201905081810360008301526121fb81611e1b565b9050919050565b6000602082019050818103600083015261221b81611e3e565b9050919050565b6000602082019050818103600083015261223b81611e61565b9050919050565b6000602082019050818103600083015261225b81611e84565b9050919050565b6000602082019050818103600083015261227b81611ea7565b9050919050565b6000602082019050818103600083015261229b81611eca565b9050919050565b600060208201905081810360008301526122bb81611eed565b9050919050565b600060208201905081810360008301526122db81611f10565b9050919050565b600060208201905081810360008301526122fb81611f33565b9050919050565b6000610160820190506123186000830184611f56565b92915050565b60006020820190506123336000830184612046565b92915050565b600081519050919050565b600082825260208201905092915050565b60006123608261241d565b915061236b8361241d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156123a05761239f61245a565b5b828201905092915050565b60006123b68261241d565b91506123c18361241d565b9250828210156123d4576123d361245a565b5b828203905092915050565b60006123ea826123fd565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b8381101561244557808201518184015260208101905061242a565b83811115612454576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b7f546f61642063616e6e6f7420706c6179207768696c6520736c65657079000000600082015250565b7f546f6164206973206e6f74206665656461626c65000000000000000000000000600082015250565b7f546f616420697320616c726561647920766962696e6700000000000000000000600082015250565b7f546f616420697320646561640000000000000000000000000000000000000000600082015250565b7f546f6164206973206e6f7420706c617961626c65000000000000000000000000600082015250565b7f546f61642069732066756c6c7920726573746564000000000000000000000000600082015250565b7f546f616420697320666564000000000000000000000000000000000000000000600082015250565b7f546f6164206973206e6f7420736c65657061626c650000000000000000000000600082015250565b7f546f61642063616e6e6f7420736c656570207768696c65207374617276696e67600082015250565b612614816123df565b811461261f57600080fd5b50565b61262b8161241d565b811461263657600080fd5b5056fe272573272068617320737461727465642067616d6520617420626c6f636b206e756d626572202725732754696d652073696e6365206c61737420666565643a202725732720626c6f636b732e206465636179696e672062792027257327a2646970667358221220f33a2cc2cf46ea4ba636998aa2c3a3ec9cbf4fd7d9730ed4a2489c767e45c33e64736f6c63430008040033";

export class Toadzgotchi__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Toadzgotchi> {
    return super.deploy(overrides || {}) as Promise<Toadzgotchi>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Toadzgotchi {
    return super.attach(address) as Toadzgotchi;
  }
  connect(signer: Signer): Toadzgotchi__factory {
    return super.connect(signer) as Toadzgotchi__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ToadzgotchiInterface {
    return new utils.Interface(_abi) as ToadzgotchiInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Toadzgotchi {
    return new Contract(address, _abi, signerOrProvider) as Toadzgotchi;
  }
}
