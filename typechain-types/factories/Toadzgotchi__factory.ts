/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Toadzgotchi, ToadzgotchiInterface } from "../Toadzgotchi";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "feedValue",
        type: "uint256",
      },
    ],
    name: "feedToad",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "playValue",
        type: "uint256",
      },
    ],
    name: "playToad",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "readToadHunger",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "readToadPlay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "readToadSleep",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "readToadStats",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isVibing",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "isFedValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "isHappyValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "isRestedValue",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "toadLevel",
            type: "uint256",
          },
        ],
        internalType: "struct Toadzgotchi.ToadStats",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "returnMsgSender",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sleepValue",
        type: "uint256",
      },
    ],
    name: "sleepToad",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startVibing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "toadStats",
    outputs: [
      {
        internalType: "bool",
        name: "isVibing",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "isFedValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "isHappyValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "isRestedValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "toadLevel",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ea7806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063874387df11610066578063874387df1461013b57806389b39bf6146101575780638acb47b414610173578063d437722914610191578063e4d1013a146101ad5761009e565b80630aa4098f146100a35780631a065307146100c15780633d724a3f146100df57806378c90660146100fd5780637955b8f914610107575b600080fd5b6100ab6101cb565b6040516100b89190610ce0565b60405180910390f35b6100c9610264565b6040516100d69190610cfb565b60405180910390f35b6100e76102ad565b6040516100f49190610c04565b60405180910390f35b6101056102b5565b005b610121600480360381019061011c9190610ac6565b610403565b604051610132959493929190610c1f565b60405180910390f35b61015560048036038101906101509190610aef565b610446565b005b610171600480360381019061016c9190610aef565b6105ab565b005b61017b610710565b6040516101889190610cfb565b60405180910390f35b6101ab60048036038101906101a69190610aef565b610759565b005b6101b56108be565b6040516101c29190610cfb565b60405180910390f35b6101d3610a6b565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a00160405290816000820160009054906101000a900460ff16151515158152602001600182015481526020016002820154815260200160038201548152602001600482015481525050905090565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154905090565b600033905090565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690831515021790551561031857610401565b6103a66040518060400160405280601b81526020017f272573272068617320737461727465642067616d652e20272573270000000000815250336000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16610907565b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff0219169083151502179055505b565b60006020528060005260406000206000915090508060000160009054906101000a900460ff16908060010154908060020154908060030154908060040154905085565b6104856040518060400160405280601b81526020017f416464696e67202725732720746f206973486170707956616c75650000000000815250826109a6565b60646000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154106105165760008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055505b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201546105639190610d32565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555050565b6105ea6040518060400160405280601981526020017f416464696e67202725732720746f20697346656456616c756500000000000000815250826109a6565b60646000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101541061067b5760008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055505b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546106c89190610d32565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905090565b6107986040518060400160405280601c81526020017f416464696e67202725732720746f20697352657374656456616c756500000000815250826109a6565b60646000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154106108295760008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055505b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301546108769190610d32565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018190555050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154905090565b6109a183838360405160240161091f93929190610c72565b6040516020818303038152906040527fc91d5ed4000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610a42565b505050565b610a3e82826040516024016109bc929190610cb0565b6040516020818303038152906040527f9710a9d0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610a42565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6040518060a00160405280600015158152602001600081526020016000815260200160008152602001600081525090565b600081359050610aab81610e43565b92915050565b600081359050610ac081610e5a565b92915050565b600060208284031215610ad857600080fd5b6000610ae684828501610a9c565b91505092915050565b600060208284031215610b0157600080fd5b6000610b0f84828501610ab1565b91505092915050565b610b2181610d88565b82525050565b610b3081610d9a565b82525050565b610b3f81610d9a565b82525050565b6000610b5082610d16565b610b5a8185610d21565b9350610b6a818560208601610dd0565b610b7381610e32565b840191505092915050565b60a082016000820151610b946000850182610b27565b506020820151610ba76020850182610be6565b506040820151610bba6040850182610be6565b506060820151610bcd6060850182610be6565b506080820151610be06080850182610be6565b50505050565b610bef81610dc6565b82525050565b610bfe81610dc6565b82525050565b6000602082019050610c196000830184610b18565b92915050565b600060a082019050610c346000830188610b36565b610c416020830187610bf5565b610c4e6040830186610bf5565b610c5b6060830185610bf5565b610c686080830184610bf5565b9695505050505050565b60006060820190508181036000830152610c8c8186610b45565b9050610c9b6020830185610b18565b610ca86040830184610b36565b949350505050565b60006040820190508181036000830152610cca8185610b45565b9050610cd96020830184610bf5565b9392505050565b600060a082019050610cf56000830184610b7e565b92915050565b6000602082019050610d106000830184610bf5565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610d3d82610dc6565b9150610d4883610dc6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d7d57610d7c610e03565b5b828201905092915050565b6000610d9382610da6565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610dee578082015181840152602081019050610dd3565b83811115610dfd576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f8301169050919050565b610e4c81610d88565b8114610e5757600080fd5b50565b610e6381610dc6565b8114610e6e57600080fd5b5056fea26469706673582212204693e826d18c5b5168e50d87b79352ca93d0a995b10fb9aab47b456eeec95d5c64736f6c63430008040033";

export class Toadzgotchi__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Toadzgotchi> {
    return super.deploy(overrides || {}) as Promise<Toadzgotchi>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Toadzgotchi {
    return super.attach(address) as Toadzgotchi;
  }
  connect(signer: Signer): Toadzgotchi__factory {
    return super.connect(signer) as Toadzgotchi__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ToadzgotchiInterface {
    return new utils.Interface(_abi) as ToadzgotchiInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Toadzgotchi {
    return new Contract(address, _abi, signerOrProvider) as Toadzgotchi;
  }
}
